import org.asciidoctor.gradle.AsciidoctorTask

import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.asciidoctor:asciidoctorj-pdf:1.5.4"
    }
}
plugins {
    id "org.asciidoctor.convert" version "1.6.0"
}

ext {
    today = new Date()
    versionDate = new SimpleDateFormat("yyyyMMdd").format(today)

    project.version = project.file("./document.version").text
    fileName = "mock-exam"
    addSuffixToMockExam = { suffix ->
        File source = new File("${buildDir}/${fileName}.pdf")
        File target = new File("${buildDir}/${fileName}${suffix}.pdf")

        source.renameTo(target)
    }
}

class RenderMockExamTask extends AsciidoctorTask {
    @Inject
    RenderMockExamTask(String fileName, String versionDate, String language, boolean withAnswers) {

        def docType = ' (Q)'
        if (withAnswers) {
            docType = ' (A)'
        }

        sourceDir = new File("./docs/")
        sources {
            include "${fileName}.adoc"
        }
        outputDir = new File("./build/")
        separateOutputDirs = false
        backends 'pdf'

        def fileVersion = project.version.trim() + "-" + language

        attributes = [
                'icons'           : 'font',
                'version-label'   : '',
                'revnumber'       : fileVersion,
                'revdate'         : versionDate + docType,
                'document-version': fileVersion + "-" + versionDate + docType,
                'currentDate'     : versionDate,
                'language'        : language,
                'withAnswers'     : withAnswers,
                'pdf-stylesdir'   : '../pdf-theme/themes',
                'pdf-fontsdir'    : '../pdf-theme/fonts',
                'pdf-style'       : 'isaqb'
        ]
    }
}

task buildDocs {
    group 'Documentation'
    description 'Grouping task for generating all languages in several formats'
    dependsOn "renderQuestionsOnlyDE", "renderQuestionsAndAnswersDE", "renderQuestionsOnlyEN", "renderQuestionsAndAnswersEN"
}

task renderQuestionsOnlyDE(type: RenderMockExamTask,
        constructorArgs: [fileName, versionDate, "DE", false]) {
    doLast {
        addSuffixToMockExam("-questions-de")
    }
}

task renderQuestionsAndAnswersDE(type: RenderMockExamTask,
        constructorArgs: [fileName, versionDate, "DE", true]) {
    doLast {
        addSuffixToMockExam("-answers-de")
    }
}


task renderQuestionsOnlyEN(type: RenderMockExamTask,
        constructorArgs: [fileName, versionDate, "EN", false]) {
    doLast {
        addSuffixToMockExam("-questions-en")
    }
}

task renderQuestionsAndAnswersEN(type: RenderMockExamTask,
        constructorArgs: [fileName, versionDate, "EN", true]) {
    doLast {
        addSuffixToMockExam("-answers-en")
    }
}


defaultTasks "buildDocs"
